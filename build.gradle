plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco' // Jacoco -> codecov 를 위해 추가
}

group = 'team03'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// repositories를 dependencies 앞에 배치 (중요!)
repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

jacoco {
    toolVersion = "0.8.11" // jacoco 버전 명시
}

ext {
    queryDslVersion = "5.1.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Lombok
    implementation 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Security
    implementation 'org.springframework.security:spring-security-messaging'

    // AI (Stanford CoreNLP만 사용)
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'edu.stanford.nlp:stanford-corenlp:4.5.4'
    implementation 'edu.stanford.nlp:stanford-corenlp:4.5.4:models'
    implementation 'com.github.shin285:KOMORAN:3.3.9'

    // Monitoring
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.31.7'

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2' // 테스트용

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework:spring-websocket'
    testImplementation 'org.springframework:spring-messaging'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    finalizedBy(tasks.jacocoTestReport)
    useJUnitPlatform()
}

tasks.named('jacocoTestReport') {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

tasks.withType(JavaExec) {
    jvmArgs = ['-Xmx4g', '-Xms1g']
}