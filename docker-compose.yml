version: '3.7'
services:
  # Spring Boot Backend
  backend:
    container_name: mopl-container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      kafka: # kafka가 먼저 실행되도록 의존성 추가
        condition: service_started
    env_file:
      - ./.env
    environment:
      - TZ=Asia/Seoul
      - JVM_OPTS=-Xms256m -Xmx512m
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:${POSTGRES_PORT}/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      # redis
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      # kafka
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  # Database: PostgreSQL
  db:
    container_name: postgreSQL
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Memory DB: Redis
  redis:
    container_name: redis
    image: redis:7-alpine3.21
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  # Message Broker: Kafka (KRaft Mode)
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.10
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      # 1. KRaft 모드 설정
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093

      # 2. 리스너 설정
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      # 3. 그 외 설정
      # 오프셋 복제 개수
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # 리밸런싱 대기 시간
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # 트랜잭션 로그 복제 개수
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # 쓰기 허용 최소 복제본 수
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
volumes:
  postgres-data:
  redis_data:
  kafka_data:
