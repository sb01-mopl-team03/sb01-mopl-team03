spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: dummy-google-client-id
            client-secret: dummy-google-client-secret
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile
              - email
          kakao:
            client-name: kakao
            client-id: dummy-kakao-client-id
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
          kakao:
            user-name-attribute: id
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me

  datasource:
    url: jdbc:postgresql://localhost:5432/testdb
    username: testuser
    password: testpass
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  sql:
    init:
      mode: always  # schema.sql, data.sql 사용

logging:
  level:
    root: WARN
    org.springframework: INFO
    org.hibernate.sql: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
